#ifndef _MODULE_OOC_Doc_TextBuffer_
#define _MODULE_OOC_Doc_TextBuffer_

#include <__typemap.h>
#include <RT0.oh>
#include <OOC/Doc.oh>
#include <RT0.oh>
#include <Object.oh>
#include <Exception.oh>
typedef struct OOC_Doc_TextBuffer__BufferDesc *OOC_Doc_TextBuffer__Buffer;
typedef struct OOC_Doc_TextBuffer__BufferDesc {
  OOC_Scanner_InputBuffer__CharArray str;
  OOC_INT32 len;
} OOC_Doc_TextBuffer__BufferDesc;
extern OOC_Doc_TextBuffer__Buffer OOC_Doc_TextBuffer__New(void);
extern void OOC_Doc_TextBuffer__BufferDesc_Clear(OOC_Doc_TextBuffer__Buffer b);
#define _TBN_OOC_Doc_TextBuffer__BufferDesc_Clear 0
typedef void (*_TBP_OOC_Doc_TextBuffer__BufferDesc_Clear)(OOC_Doc_TextBuffer__Buffer b);
extern void OOC_Doc_TextBuffer__BufferDesc_Append(OOC_Doc_TextBuffer__Buffer b, const OOC_CHAR8 str[], OOC_LEN str_0d);
#define _TBN_OOC_Doc_TextBuffer__BufferDesc_Append 1
typedef void (*_TBP_OOC_Doc_TextBuffer__BufferDesc_Append)(OOC_Doc_TextBuffer__Buffer b, const OOC_CHAR8 str[], OOC_LEN str_0d);
extern void OOC_Doc_TextBuffer__BufferDesc_AppendEOL(OOC_Doc_TextBuffer__Buffer b);
#define _TBN_OOC_Doc_TextBuffer__BufferDesc_AppendEOL 2
typedef void (*_TBP_OOC_Doc_TextBuffer__BufferDesc_AppendEOL)(OOC_Doc_TextBuffer__Buffer b);
extern void OOC_Doc_TextBuffer__BufferDesc_AppendSpaces(OOC_Doc_TextBuffer__Buffer b, OOC_INT32 len);
#define _TBN_OOC_Doc_TextBuffer__BufferDesc_AppendSpaces 3
typedef void (*_TBP_OOC_Doc_TextBuffer__BufferDesc_AppendSpaces)(OOC_Doc_TextBuffer__Buffer b, OOC_INT32 len);
extern void OOC_Doc_TextBuffer__BufferDesc_AppendSubstring(OOC_Doc_TextBuffer__Buffer b, const OOC_CHAR8 str[], OOC_LEN str_0d, OOC_INT32 start, OOC_INT32 end);
#define _TBN_OOC_Doc_TextBuffer__BufferDesc_AppendSubstring 4
typedef void (*_TBP_OOC_Doc_TextBuffer__BufferDesc_AppendSubstring)(OOC_Doc_TextBuffer__Buffer b, const OOC_CHAR8 str[], OOC_LEN str_0d, OOC_INT32 start, OOC_INT32 end);
extern void OOC_Doc_TextBuffer__BufferDesc_AppendNoLB(OOC_Doc_TextBuffer__Buffer b, const OOC_CHAR8 str[], OOC_LEN str_0d);
#define _TBN_OOC_Doc_TextBuffer__BufferDesc_AppendNoLB 5
typedef void (*_TBP_OOC_Doc_TextBuffer__BufferDesc_AppendNoLB)(OOC_Doc_TextBuffer__Buffer b, const OOC_CHAR8 str[], OOC_LEN str_0d);
extern void OOC_Doc_TextBuffer__BufferDesc_Capitalize(OOC_Doc_TextBuffer__Buffer b, OOC_INT32 start, OOC_INT32 end);
#define _TBN_OOC_Doc_TextBuffer__BufferDesc_Capitalize 6
typedef void (*_TBP_OOC_Doc_TextBuffer__BufferDesc_Capitalize)(OOC_Doc_TextBuffer__Buffer b, OOC_INT32 start, OOC_INT32 end);
extern void OOC_Doc_TextBuffer__FormatBlock(OOC_Doc_TextBuffer__Buffer dest, OOC_Doc_TextBuffer__Buffer source, OOC_INT32 indent, OOC_INT32 scrWidth, OOC_INT32 offsetFirst);
extern void OOC_Doc_TextBuffer__FormatBlockHTML(OOC_Doc_TextBuffer__Buffer dest, OOC_Doc_TextBuffer__Buffer source, OOC_INT32 indent, OOC_INT32 scrWidth, OOC_INT32 offsetFirst);
extern void OOC_Doc_TextBuffer__IndentBlock(OOC_Doc_TextBuffer__Buffer dest, OOC_Doc_TextBuffer__Buffer source, OOC_INT32 indent);
extern void OOC_OOC_Doc_TextBuffer_init(void);
extern void OOC_OOC_Doc_TextBuffer_open(RT0__Module client);
extern void OOC_OOC_Doc_TextBuffer_destroy(void);
extern void OOC_OOC_Doc_TextBuffer_close(RT0__Module client);

/* run-time meta data */
extern RT0__StructDesc _td_OOC_Doc_TextBuffer__Buffer;
extern RT0__StructDesc _td_OOC_Doc_TextBuffer__BufferDesc;
extern RT0__StructDesc _td_OOC_Doc_TextBuffer__1653;
extern RT0__StructDesc _td_OOC_Doc_TextBuffer__2464;
extern RT0__StructDesc _td_OOC_Doc_TextBuffer__2882;
#endif /* _MODULE_OOC_Doc_TextBuffer_ */

/* --- */
