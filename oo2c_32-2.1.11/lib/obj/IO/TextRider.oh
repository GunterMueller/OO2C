#ifndef _MODULE_IO_TextRider_
#define _MODULE_IO_TextRider_

#include <__typemap.h>
#include <RT0.oh>
#include <Ascii.oh>
#include <CharClass.oh>
#include <LRealStr.oh>
#include <Object.oh>
#include <IO.oh>
#include <RT0.oh>
#include <Object.oh>
#include <Exception.oh>
#define IO_TextRider__maxLengthEol 2
#define IO_TextRider__eolLF 0
#define IO_TextRider__eolCR 1
#define IO_TextRider__eolCRLF 2
typedef struct IO_TextRider__OverflowErrorDesc *IO_TextRider__OverflowError;
typedef struct IO_TextRider__OverflowErrorDesc {
  Object__String msg;
  OOC_PTR backtrace[21];
  OOC_INT32 backtraceSize;
} IO_TextRider__OverflowErrorDesc;
typedef struct IO_TextRider__WriterDesc *IO_TextRider__Writer;
typedef struct IO_TextRider__WriterDesc {
  IO__ByteChannel channel;
  IO__Error error;
  OOC_CHAR8 eol[2];
  OOC_INT16 eolLen;
} IO_TextRider__WriterDesc;
typedef OOC_CHAR8 *IO_TextRider__Buffer;
typedef struct IO_TextRider__ReaderDesc *IO_TextRider__Reader;
typedef struct IO_TextRider__ReaderDesc {
  IO__ByteChannel channel;
  IO_TextRider__Buffer buffer;
  IO_TextRider__Buffer tmp;
  OOC_INT32 pos;
  OOC_INT32 lineLength;
  OOC_CHAR8 consumeEOL;
  OOC_INT8 eol;
} IO_TextRider__ReaderDesc;
extern IO__ProtocolError IO_TextRider__NewProtocolError(Object__String msg);
extern void NORETURN IO_TextRider__RaiseProtocolError(Object__String msg) NORETURN2;
extern IO_TextRider__OverflowError IO_TextRider__NewOverflowError(Object__String msg);
extern void NORETURN IO_TextRider__RaiseOverflowError(Object__String msg) NORETURN2;
extern void IO_TextRider__WriterDesc_INIT(IO_TextRider__Writer w, IO__ByteChannel ch);
#define _TBN_IO_TextRider__WriterDesc_INIT 0
typedef void (*_TBP_IO_TextRider__WriterDesc_INIT)(IO_TextRider__Writer w, IO__ByteChannel ch);
extern IO_TextRider__Writer IO_TextRider__ConnectWriter(IO__ByteChannel ch);
extern void IO_TextRider__WriterDesc_SetEol(IO_TextRider__Writer w, const OOC_CHAR8 marker__ref[], OOC_LEN marker_0d, OOC_INT16 markerLen);
#define _TBN_IO_TextRider__WriterDesc_SetEol 1
typedef void (*_TBP_IO_TextRider__WriterDesc_SetEol)(IO_TextRider__Writer w, const OOC_CHAR8 marker__ref[], OOC_LEN marker_0d, OOC_INT16 markerLen);
extern void IO_TextRider__WriterDesc_WriteString(volatile IO_TextRider__Writer w, const OOC_CHAR8 s[], volatile OOC_LEN s_0d);
#define _TBN_IO_TextRider__WriterDesc_WriteString 2
typedef void (*_TBP_IO_TextRider__WriterDesc_WriteString)(IO_TextRider__Writer w, const OOC_CHAR8 s[], OOC_LEN s_0d);
extern void IO_TextRider__WriterDesc_WriteStringRegion(volatile IO_TextRider__Writer w, const OOC_CHAR8 s[], volatile OOC_LEN s_0d, volatile OOC_INT32 start, volatile OOC_INT32 end);
#define _TBN_IO_TextRider__WriterDesc_WriteStringRegion 3
typedef void (*_TBP_IO_TextRider__WriterDesc_WriteStringRegion)(IO_TextRider__Writer w, const OOC_CHAR8 s[], OOC_LEN s_0d, OOC_INT32 start, OOC_INT32 end);
extern void IO_TextRider__WriterDesc_WriteObject(volatile IO_TextRider__Writer w, volatile Object__Object obj);
#define _TBN_IO_TextRider__WriterDesc_WriteObject 4
typedef void (*_TBP_IO_TextRider__WriterDesc_WriteObject)(IO_TextRider__Writer w, Object__Object obj);
extern void IO_TextRider__WriterDesc_WriteBool(IO_TextRider__Writer w, OOC_CHAR8 _bool);
#define _TBN_IO_TextRider__WriterDesc_WriteBool 5
typedef void (*_TBP_IO_TextRider__WriterDesc_WriteBool)(IO_TextRider__Writer w, OOC_CHAR8 _bool);
extern void IO_TextRider__WriterDesc_WriteChar(volatile IO_TextRider__Writer w, volatile OOC_CHAR8 ch);
#define _TBN_IO_TextRider__WriterDesc_WriteChar 6
typedef void (*_TBP_IO_TextRider__WriterDesc_WriteChar)(IO_TextRider__Writer w, OOC_CHAR8 ch);
extern void IO_TextRider__WriterDesc_WriteLInt(IO_TextRider__Writer w, OOC_INT32 lint, OOC_INT32 n);
#define _TBN_IO_TextRider__WriterDesc_WriteLInt 7
typedef void (*_TBP_IO_TextRider__WriterDesc_WriteLInt)(IO_TextRider__Writer w, OOC_INT32 lint, OOC_INT32 n);
extern void IO_TextRider__WriterDesc_WriteSInt(IO_TextRider__Writer w, OOC_INT8 sint, OOC_INT32 n);
#define _TBN_IO_TextRider__WriterDesc_WriteSInt 8
typedef void (*_TBP_IO_TextRider__WriterDesc_WriteSInt)(IO_TextRider__Writer w, OOC_INT8 sint, OOC_INT32 n);
extern void IO_TextRider__WriterDesc_WriteInt(IO_TextRider__Writer w, OOC_INT16 _int, OOC_INT32 n);
#define _TBN_IO_TextRider__WriterDesc_WriteInt 9
typedef void (*_TBP_IO_TextRider__WriterDesc_WriteInt)(IO_TextRider__Writer w, OOC_INT16 _int, OOC_INT32 n);
extern void IO_TextRider__WriterDesc_WriteHex(IO_TextRider__Writer w, OOC_INT32 lint, OOC_INT32 d);
#define _TBN_IO_TextRider__WriterDesc_WriteHex 10
typedef void (*_TBP_IO_TextRider__WriterDesc_WriteHex)(IO_TextRider__Writer w, OOC_INT32 lint, OOC_INT32 d);
extern void IO_TextRider__WriterDesc_WriteLReal(IO_TextRider__Writer w, OOC_REAL64 lreal, OOC_INT32 n, OOC_INT32 k);
#define _TBN_IO_TextRider__WriterDesc_WriteLReal 11
typedef void (*_TBP_IO_TextRider__WriterDesc_WriteLReal)(IO_TextRider__Writer w, OOC_REAL64 lreal, OOC_INT32 n, OOC_INT32 k);
extern void IO_TextRider__WriterDesc_WriteReal(IO_TextRider__Writer w, OOC_REAL32 real, OOC_INT32 n, OOC_INT32 k);
#define _TBN_IO_TextRider__WriterDesc_WriteReal 12
typedef void (*_TBP_IO_TextRider__WriterDesc_WriteReal)(IO_TextRider__Writer w, OOC_REAL32 real, OOC_INT32 n, OOC_INT32 k);
extern void IO_TextRider__WriterDesc_WriteLRealFix(IO_TextRider__Writer w, OOC_REAL64 *lreal, OOC_INT32 n, OOC_INT32 k);
#define _TBN_IO_TextRider__WriterDesc_WriteLRealFix 13
typedef void (*_TBP_IO_TextRider__WriterDesc_WriteLRealFix)(IO_TextRider__Writer w, OOC_REAL64 *lreal, OOC_INT32 n, OOC_INT32 k);
extern void IO_TextRider__WriterDesc_WriteRealFix(IO_TextRider__Writer w, OOC_REAL32 real, OOC_INT32 n, OOC_INT32 k);
#define _TBN_IO_TextRider__WriterDesc_WriteRealFix 14
typedef void (*_TBP_IO_TextRider__WriterDesc_WriteRealFix)(IO_TextRider__Writer w, OOC_REAL32 real, OOC_INT32 n, OOC_INT32 k);
extern void IO_TextRider__WriterDesc_WriteLRealEng(IO_TextRider__Writer w, OOC_REAL64 *lreal, OOC_INT32 n, OOC_INT32 k);
#define _TBN_IO_TextRider__WriterDesc_WriteLRealEng 15
typedef void (*_TBP_IO_TextRider__WriterDesc_WriteLRealEng)(IO_TextRider__Writer w, OOC_REAL64 *lreal, OOC_INT32 n, OOC_INT32 k);
extern void IO_TextRider__WriterDesc_WriteRealEng(IO_TextRider__Writer w, OOC_REAL32 real, OOC_INT32 n, OOC_INT32 k);
#define _TBN_IO_TextRider__WriterDesc_WriteRealEng 16
typedef void (*_TBP_IO_TextRider__WriterDesc_WriteRealEng)(IO_TextRider__Writer w, OOC_REAL32 real, OOC_INT32 n, OOC_INT32 k);
extern void IO_TextRider__WriterDesc_WriteSet(IO_TextRider__Writer w, OOC_UINT32 s);
#define _TBN_IO_TextRider__WriterDesc_WriteSet 17
typedef void (*_TBP_IO_TextRider__WriterDesc_WriteSet)(IO_TextRider__Writer w, OOC_UINT32 s);
extern void IO_TextRider__WriterDesc_WriteLn(IO_TextRider__Writer w);
#define _TBN_IO_TextRider__WriterDesc_WriteLn 18
typedef void (*_TBP_IO_TextRider__WriterDesc_WriteLn)(IO_TextRider__Writer w);
extern void IO_TextRider__ReaderDesc_INIT(IO_TextRider__Reader r, IO__ByteChannel ch);
#define _TBN_IO_TextRider__ReaderDesc_INIT 0
typedef void (*_TBP_IO_TextRider__ReaderDesc_INIT)(IO_TextRider__Reader r, IO__ByteChannel ch);
extern IO_TextRider__Reader IO_TextRider__ConnectReader(IO__ByteChannel ch);
extern void IO_TextRider__ReaderDesc_SetEOL(IO_TextRider__Reader r, OOC_INT8 type);
#define _TBN_IO_TextRider__ReaderDesc_SetEOL 1
typedef void (*_TBP_IO_TextRider__ReaderDesc_SetEOL)(IO_TextRider__Reader r, OOC_INT8 type);
extern void IO_TextRider__ReaderDesc_AquireBufferWithSize(IO_TextRider__Reader r, OOC_INT32 size);
#define _TBN_IO_TextRider__ReaderDesc_AquireBufferWithSize 2
typedef void (*_TBP_IO_TextRider__ReaderDesc_AquireBufferWithSize)(IO_TextRider__Reader r, OOC_INT32 size);
extern void IO_TextRider__ReaderDesc_ReadLineBuffer(IO_TextRider__Reader r);
#define _TBN_IO_TextRider__ReaderDesc_ReadLineBuffer 3
typedef void (*_TBP_IO_TextRider__ReaderDesc_ReadLineBuffer)(IO_TextRider__Reader r);
extern void IO_TextRider__ReaderDesc_ConsumeWhiteSpace(IO_TextRider__Reader r);
#define _TBN_IO_TextRider__ReaderDesc_ConsumeWhiteSpace 4
typedef void (*_TBP_IO_TextRider__ReaderDesc_ConsumeWhiteSpace)(IO_TextRider__Reader r);
extern void IO_TextRider__ReaderDesc_ReadChar(IO_TextRider__Reader r, OOC_CHAR8 *ch);
#define _TBN_IO_TextRider__ReaderDesc_ReadChar 5
typedef void (*_TBP_IO_TextRider__ReaderDesc_ReadChar)(IO_TextRider__Reader r, OOC_CHAR8 *ch);
extern void IO_TextRider__ReaderDesc_ReadString(IO_TextRider__Reader r, OOC_CHAR8 s[], OOC_LEN s_0d);
#define _TBN_IO_TextRider__ReaderDesc_ReadString 6
typedef void (*_TBP_IO_TextRider__ReaderDesc_ReadString)(IO_TextRider__Reader r, OOC_CHAR8 s[], OOC_LEN s_0d);
extern void IO_TextRider__ReaderDesc_ReadLInt(IO_TextRider__Reader r, OOC_INT32 *lint);
#define _TBN_IO_TextRider__ReaderDesc_ReadLInt 7
typedef void (*_TBP_IO_TextRider__ReaderDesc_ReadLInt)(IO_TextRider__Reader r, OOC_INT32 *lint);
extern void IO_TextRider__ReaderDesc_ReadInt(IO_TextRider__Reader r, OOC_INT16 *_int);
#define _TBN_IO_TextRider__ReaderDesc_ReadInt 8
typedef void (*_TBP_IO_TextRider__ReaderDesc_ReadInt)(IO_TextRider__Reader r, OOC_INT16 *_int);
extern void IO_TextRider__ReaderDesc_ReadSInt(IO_TextRider__Reader r, OOC_INT8 *sint);
#define _TBN_IO_TextRider__ReaderDesc_ReadSInt 9
typedef void (*_TBP_IO_TextRider__ReaderDesc_ReadSInt)(IO_TextRider__Reader r, OOC_INT8 *sint);
extern void IO_TextRider__ReaderDesc_ReadIdentifier(IO_TextRider__Reader r, OOC_CHAR8 s[], OOC_LEN s_0d);
#define _TBN_IO_TextRider__ReaderDesc_ReadIdentifier 10
typedef void (*_TBP_IO_TextRider__ReaderDesc_ReadIdentifier)(IO_TextRider__Reader r, OOC_CHAR8 s[], OOC_LEN s_0d);
extern void IO_TextRider__ReaderDesc_ReadBool(IO_TextRider__Reader r, OOC_CHAR8 *_bool);
#define _TBN_IO_TextRider__ReaderDesc_ReadBool 11
typedef void (*_TBP_IO_TextRider__ReaderDesc_ReadBool)(IO_TextRider__Reader r, OOC_CHAR8 *_bool);
extern void IO_TextRider__ReaderDesc_ReadHex(IO_TextRider__Reader r, OOC_INT32 *_int);
#define _TBN_IO_TextRider__ReaderDesc_ReadHex 12
typedef void (*_TBP_IO_TextRider__ReaderDesc_ReadHex)(IO_TextRider__Reader r, OOC_INT32 *_int);
extern void IO_TextRider__ReaderDesc_ReadLn(IO_TextRider__Reader r);
#define _TBN_IO_TextRider__ReaderDesc_ReadLn 13
typedef void (*_TBP_IO_TextRider__ReaderDesc_ReadLn)(IO_TextRider__Reader r);
extern void IO_TextRider__ReaderDesc_ReadLine(IO_TextRider__Reader r, OOC_CHAR8 s[], OOC_LEN s_0d);
#define _TBN_IO_TextRider__ReaderDesc_ReadLine 14
typedef void (*_TBP_IO_TextRider__ReaderDesc_ReadLine)(IO_TextRider__Reader r, OOC_CHAR8 s[], OOC_LEN s_0d);
extern void OOC_IO_TextRider_init(void);
extern void OOC_IO_TextRider_open(RT0__Module client);
extern void OOC_IO_TextRider_destroy(void);
extern void OOC_IO_TextRider_close(RT0__Module client);

/* run-time meta data */
extern RT0__StructDesc _td_IO_TextRider__OverflowError;
extern RT0__StructDesc _td_IO_TextRider__OverflowErrorDesc;
extern RT0__StructDesc _td_IO_TextRider__Writer;
extern RT0__StructDesc _td_IO_TextRider__WriterDesc;
extern RT0__StructDesc _td_IO_TextRider__2393;
extern RT0__StructDesc _td_IO_TextRider__2572;
extern RT0__StructDesc _td_IO_TextRider__Buffer;
extern RT0__StructDesc _td_IO_TextRider__Reader;
extern RT0__StructDesc _td_IO_TextRider__ReaderDesc;
extern RT0__StructDesc _td_IO_TextRider__4710;
extern RT0__StructDesc _td_IO_TextRider__5616;
extern RT0__StructDesc _td_IO_TextRider__5865;
extern RT0__StructDesc _td_IO_TextRider__7834;
extern RT0__StructDesc _td_IO_TextRider__9297;
extern RT0__StructDesc _td_IO_TextRider__9666;
extern RT0__StructDesc _td_IO_TextRider__10105;
extern RT0__StructDesc _td_IO_TextRider__10482;
extern RT0__StructDesc _td_IO_TextRider__10922;
extern RT0__StructDesc _td_IO_TextRider__11297;
extern RT0__StructDesc _td_IO_TextRider__17581;
extern RT0__StructDesc _td_IO_TextRider__21495;
extern RT0__StructDesc _td_IO_TextRider__22812;
extern RT0__StructDesc _td_IO_TextRider__23199;
extern RT0__StructDesc _td_IO_TextRider__26366;
#endif /* _MODULE_IO_TextRider_ */

/* --- */
