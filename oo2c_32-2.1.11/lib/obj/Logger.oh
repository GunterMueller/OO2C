#ifndef _MODULE_Logger_
#define _MODULE_Logger_

#include <__typemap.h>
#include <RT0.oh>
#include <Object.oh>
#include <IO.oh>
#include <IO/TextRider.oh>
#include <RT0.oh>
#include <Object.oh>
#include <Exception.oh>
typedef struct Logger__TargetDesc *Logger__Target;
typedef struct Logger__TargetDesc {
  OOC_CHAR8 passOnReport;
  OOC_CHAR8 passOnDebug;
} Logger__TargetDesc;
typedef struct Logger__NullTargetDesc *Logger__NullTarget;
typedef struct Logger__NullTargetDesc {
  OOC_CHAR8 passOnReport;
  OOC_CHAR8 passOnDebug;
} Logger__NullTargetDesc;
typedef struct Logger__ChannelTargetDesc *Logger__ChannelTarget;
typedef struct Logger__ChannelTargetDesc {
  OOC_CHAR8 passOnReport;
  OOC_CHAR8 passOnDebug;
  OOC_CHAR8 __pad2;
  OOC_CHAR8 __pad3;
  IO_TextRider__Writer writer;
} Logger__ChannelTargetDesc;
typedef struct Logger__HandleDesc *Logger__Handle;
typedef struct Logger__HandleDesc {
  Logger__Target reportTarget;
  Logger__Target debugTarget;
  Object__String prefix;
  Object__String prefixReportInDebug;
  OOC_CHAR8 enableReport;
  OOC_CHAR8 enableDebug;
} Logger__HandleDesc;
#define Logger__timeStampFormat (OOC_CHAR8[])"%d %b %H:%M:%S "
extern Logger__Target Logger__nullTarget;
extern Logger__Target Logger__stderrTarget;
extern Logger__Target Logger__stdoutTarget;
extern Logger__Handle Logger__nullHandle;
extern void Logger__TargetDesc_INIT(Logger__Target lt, OOC_CHAR8 passOnReport, OOC_CHAR8 passOnDebug);
#define _TBN_Logger__TargetDesc_INIT 0
typedef void (*_TBP_Logger__TargetDesc_INIT)(Logger__Target lt, OOC_CHAR8 passOnReport, OOC_CHAR8 passOnDebug);
extern void Logger__TargetDesc_Write(Logger__Target lt, Object__String prefix, Object__String msg);
#define _TBN_Logger__TargetDesc_Write 1
typedef void (*_TBP_Logger__TargetDesc_Write)(Logger__Target lt, Object__String prefix, Object__String msg);
extern void Logger__NullTargetDesc_INIT(Logger__NullTarget lt);
#define _TBN_Logger__NullTargetDesc_INIT 0
typedef void (*_TBP_Logger__NullTargetDesc_INIT)(Logger__NullTarget lt);
extern void Logger__NullTargetDesc_Write(Logger__NullTarget lt, Object__String prefix, Object__String msg);
#define _TBN_Logger__NullTargetDesc_Write 1
typedef void (*_TBP_Logger__NullTargetDesc_Write)(Logger__NullTarget lt, Object__String prefix, Object__String msg);
extern void Logger__ChannelTargetDesc_INIT(Logger__ChannelTarget lt, OOC_CHAR8 passOnReport, OOC_CHAR8 passOnDebug, IO__ByteChannel ch);
#define _TBN_Logger__ChannelTargetDesc_INIT 0
typedef void (*_TBP_Logger__ChannelTargetDesc_INIT)(Logger__ChannelTarget lt, OOC_CHAR8 passOnReport, OOC_CHAR8 passOnDebug, IO__ByteChannel ch);
extern void Logger__ChannelTargetDesc_Write(Logger__ChannelTarget lt, Object__String prefix, Object__String msg);
#define _TBN_Logger__ChannelTargetDesc_Write 1
typedef void (*_TBP_Logger__ChannelTargetDesc_Write)(Logger__ChannelTarget lt, Object__String prefix, Object__String msg);
extern void Logger__HandleDesc_INIT(Logger__Handle lh, Logger__Target reportTarget, Logger__Target debugTarget, Object__String prefix);
#define _TBN_Logger__HandleDesc_INIT 0
typedef void (*_TBP_Logger__HandleDesc_INIT)(Logger__Handle lh, Logger__Target reportTarget, Logger__Target debugTarget, Object__String prefix);
extern void Logger__HandleDesc_EnableReport(Logger__Handle lh, OOC_CHAR8 enable);
#define _TBN_Logger__HandleDesc_EnableReport 1
typedef void (*_TBP_Logger__HandleDesc_EnableReport)(Logger__Handle lh, OOC_CHAR8 enable);
extern void Logger__HandleDesc_EnableDebug(Logger__Handle lh, OOC_CHAR8 enable);
#define _TBN_Logger__HandleDesc_EnableDebug 2
typedef void (*_TBP_Logger__HandleDesc_EnableDebug)(Logger__Handle lh, OOC_CHAR8 enable);
extern Logger__Handle Logger__HandleDesc_CloneTargets(Logger__Handle lh, Object__String newPrefix);
#define _TBN_Logger__HandleDesc_CloneTargets 3
typedef Logger__Handle (*_TBP_Logger__HandleDesc_CloneTargets)(Logger__Handle lh, Object__String newPrefix);
extern void Logger__HandleDesc_Debug(Logger__Handle lh, Object__String msg);
#define _TBN_Logger__HandleDesc_Debug 4
typedef void (*_TBP_Logger__HandleDesc_Debug)(Logger__Handle lh, Object__String msg);
extern void Logger__HandleDesc_DebugObject(Logger__Handle lh, Object__String msg, Object__Object x);
#define _TBN_Logger__HandleDesc_DebugObject 5
typedef void (*_TBP_Logger__HandleDesc_DebugObject)(Logger__Handle lh, Object__String msg, Object__Object x);
extern void Logger__HandleDesc_DebugInt(Logger__Handle lh, Object__String msg, OOC_INT32 x);
#define _TBN_Logger__HandleDesc_DebugInt 6
typedef void (*_TBP_Logger__HandleDesc_DebugInt)(Logger__Handle lh, Object__String msg, OOC_INT32 x);
extern void Logger__HandleDesc_DebugBool(Logger__Handle lh, Object__String msg, OOC_CHAR8 x);
#define _TBN_Logger__HandleDesc_DebugBool 7
typedef void (*_TBP_Logger__HandleDesc_DebugBool)(Logger__Handle lh, Object__String msg, OOC_CHAR8 x);
extern void Logger__HandleDesc_DebugLongReal(Logger__Handle lh, Object__String msg, OOC_REAL64 x);
#define _TBN_Logger__HandleDesc_DebugLongReal 8
typedef void (*_TBP_Logger__HandleDesc_DebugLongReal)(Logger__Handle lh, Object__String msg, OOC_REAL64 x);
extern void Logger__HandleDesc_Report(Logger__Handle lh, Object__String msg);
#define _TBN_Logger__HandleDesc_Report 9
typedef void (*_TBP_Logger__HandleDesc_Report)(Logger__Handle lh, Object__String msg);
extern void Logger__HandleDesc_ReportObject(Logger__Handle lh, Object__String msg, Object__Object x);
#define _TBN_Logger__HandleDesc_ReportObject 10
typedef void (*_TBP_Logger__HandleDesc_ReportObject)(Logger__Handle lh, Object__String msg, Object__Object x);
extern void Logger__HandleDesc_ReportInt(Logger__Handle lh, Object__String msg, OOC_INT32 x);
#define _TBN_Logger__HandleDesc_ReportInt 11
typedef void (*_TBP_Logger__HandleDesc_ReportInt)(Logger__Handle lh, Object__String msg, OOC_INT32 x);
extern void Logger__HandleDesc_ReportBool(Logger__Handle lh, Object__String msg, OOC_CHAR8 x);
#define _TBN_Logger__HandleDesc_ReportBool 12
typedef void (*_TBP_Logger__HandleDesc_ReportBool)(Logger__Handle lh, Object__String msg, OOC_CHAR8 x);
extern void Logger__HandleDesc_ReportLongReal(Logger__Handle lh, Object__String msg, OOC_REAL64 x);
#define _TBN_Logger__HandleDesc_ReportLongReal 13
typedef void (*_TBP_Logger__HandleDesc_ReportLongReal)(Logger__Handle lh, Object__String msg, OOC_REAL64 x);
extern void OOC_Logger_init(void);
extern void OOC_Logger_open(RT0__Module client);
extern void OOC_Logger_destroy(void);
extern void OOC_Logger_close(RT0__Module client);

/* run-time meta data */
extern RT0__StructDesc _td_Logger__Target;
extern RT0__StructDesc _td_Logger__TargetDesc;
extern RT0__StructDesc _td_Logger__NullTarget;
extern RT0__StructDesc _td_Logger__NullTargetDesc;
extern RT0__StructDesc _td_Logger__ChannelTarget;
extern RT0__StructDesc _td_Logger__ChannelTargetDesc;
extern RT0__StructDesc _td_Logger__Handle;
extern RT0__StructDesc _td_Logger__HandleDesc;
extern RT0__StructDesc _td_Logger__5989;
#endif /* _MODULE_Logger_ */

/* --- */
