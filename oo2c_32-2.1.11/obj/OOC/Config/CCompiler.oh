#ifndef _MODULE_OOC_Config_CCompiler_
#define _MODULE_OOC_Config_CCompiler_

#include <__typemap.h>
#include <RT0.oh>
#include <URI.oh>
#include <Config/Section/Options.oh>
#include <OOC/Package.oh>
#include <RT0.oh>
#include <Object.oh>
#include <Exception.oh>
extern Config_Section_Options__Option OOC_Config_CCompiler__libs;
extern Config_Section_Options__Option OOC_Config_CCompiler__libdir;
extern Config_Section_Options__Option OOC_Config_CCompiler__install;
extern Config_Section_Options__Option OOC_Config_CCompiler__installData;
extern Config_Section_Options__Option OOC_Config_CCompiler__uninstall;
extern Config_Section_Options__Option OOC_Config_CCompiler__bindir;
extern Config_Section_Options__Option OOC_Config_CCompiler__oocdir;
extern OOC_CHAR8 OOC_Config_CCompiler__HaveLibtool(void);
extern OOC_CHAR8 OOC_Config_CCompiler__SkipCallCC(void);
extern Object__String OOC_Config_CCompiler__CompileFileCmd(URI__URI in, URI__URI out, OOC_CHAR8 forLibrary);
extern Object__String OOC_Config_CCompiler__LinkProgramCmd(URI__URI execFile, OOC_Package__Library forLibrary);
extern Object__String OOC_Config_CCompiler__InstallDirectoryCmd(Object__String path);
extern Object__String OOC_Config_CCompiler__InstallProgramCmd(URI__URI file, OOC_CHAR8 asLibrary);
extern Object__String OOC_Config_CCompiler__UninstallProgramCmd(Object__String path, OOC_CHAR8 asLibrary);
extern void OOC_Config_CCompiler__RegisterConfig(void);
extern void OOC_OOC_Config_CCompiler_init(void);
extern void OOC_OOC_Config_CCompiler_open(RT0__Module client);
extern void OOC_OOC_Config_CCompiler_destroy(void);
extern void OOC_OOC_Config_CCompiler_close(RT0__Module client);

/* run-time meta data */
#endif /* _MODULE_OOC_Config_CCompiler_ */

/* --- */
